from api import db, maclass RedeemModel(db.Model):    """    Model class representing the 'redeem_model' table in the database.    Attributes:        id (int): Primary key for the redemption.        created_date (Date): Date when the redemption was created.        voucher_code (str): Unique code associated with the redeemed voucher.        user_id (str): ID of the user who redeemed the voucher.        transaction_id (str): ID of the transaction associated with the redemption.        staff_id (str): ID of the staff member who processed the redemption.        products_redeemed (str): Products redeemed in the transaction.        amount (float): Monetary amount related to the redemption.        discount (float): Discount amount applied during the redemption.        net_amount (float): Net monetary amount after applying discount.    """    id = db.Column(db.Integer, primary_key=True)    created_date = db.Column(db.Date)    voucher_code = db.Column(db.String)    user_id = db.Column(db.String)    transaction_id = db.Column(db.String)    staff_id = db.Column(db.String)    products_redeemed = db.Column(db.String)    amount = db.Column(db.Float)    discount = db.Column(db.Float)    net_amount = db.Column(db.Float)    def __init__(self, created_date, voucher_code, user_id, transaction_id, staff_id, products_redeemed, amount, discount, net_amount):        """        Constructor for the RedeemModel class.        Args:            id (int): Primary key for the redemption.            created_date (Date): Date when the redemption was created.            voucher_code (str): Unique code associated with the redeemed voucher.            user_id (str): ID of the user who redeemed the voucher.            transaction_id (str): ID of the transaction associated with the redemption.            staff_id (str): ID of the staff member who processed the redemption.            products_redeemed (str): Products redeemed in the transaction.            amount (float): Monetary amount related to the redemption.            discount (float): Discount amount applied during the redemption.            net_amount (float): Net monetary amount after applying discount.        """        self.created_date = created_date        self.voucher_code = voucher_code        self.user_id = user_id        self.transaction_id = transaction_id        self.staff_id = staff_id        self.products_redeemed = products_redeemed        self.amount = amount        self.discount = discount        self.net_amount = net_amountclass RedeemSchema(ma.Schema):    """    Marshmallow schema for serializing/deserializing RedeemModel objects.    Attributes:        id (int): Primary key for the redemption.        created_date (Date): Date when the redemption was created.        voucher_code (str): Unique code associated with the redeemed voucher.        user_id (str): ID of the user who redeemed the voucher.        transaction_id (str): ID of the transaction associated with the redemption.        staff_id (str): ID of the staff member who processed the redemption.        products_redeemed (str): Products redeemed in the transaction.        amount (float): Monetary amount related to the redemption.        discount (float): Discount amount applied during the redemption.        net_amount (float): Net monetary amount after applying discount.    """    class Meta:        fields = ('id', 'created_date', 'voucher_code', 'user_id', 'transaction_id', 'staff_id', 'products_redeemed', 'amount', 'discount', 'net_amount')redeem_schema = RedeemSchema()