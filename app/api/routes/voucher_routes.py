from flask import jsonify, requestfrom api.services.voucher_service import VoucherServicefrom api import app@app.route('/vouchers', methods=['GET'])def get_all_vouchers():    """    Route to retrieve all vouchers.    Returns:        Response: JSON response containing a list of voucher objects.    """    vouchers = VoucherService.get_all_vouchers()    return jsonify(vouchers)@app.route('/vouchers/<string:voucher_code>', methods=['GET'])def get_voucher(voucher_code):    """    Route to retrieve a specific voucher by its code.    Args:        voucher_code (str): The unique code of the voucher.    Returns:        Response: JSON response containing voucher details or an error message.    """    voucher = VoucherService.get_voucher_by_code(voucher_code)    if voucher:        # Create a dictionary for voucher details        voucher_dict = {            'code': voucher.code,            'type': voucher.type,            'value': voucher.value,            'discount': voucher.discount,            'expiration_date': voucher.expiration_date,            'redemption_limit': voucher.redemption_limit,            'user_restrictions': voucher.user_restrictions,            'products': voucher.products,            'redeems': []  # Initialize an empty list for redeems        }        # Include associated redeems in the response        for redeem in voucher.redeems:            redeem_dict = {                'id': redeem.id,                'created_date': redeem.created_date,                  'voucher_code': redeem.voucher_code,                'user_id': redeem.user_id,                'transaction_id': redeem.transaction_id,                'staff_id': redeem.staff_id,                'products_redeemed': redeem.products_redeemed,                'amount': redeem.amount,                'discount': redeem.discount,                'net_amount': redeem.net_amount            }            voucher_dict['redeems'].append(redeem_dict)        return jsonify(voucher_dict)    else:        return jsonify({'error': f'Voucher with code {voucher_code} not found'}), 404   @app.route('/vouchers', methods=['POST'])def create_voucher():    """    Route to create a new voucher.        Json request body    {      "code": "V0001",      "type": "gift voucher",      "value": 100.0,      "discount": 0,      "expiration_date": "2024-10-30",      "redemption_limit": 50,      "user_restrictions": "user_1,user_2",      "products": "product_a,product_b"    }    Returns:        Response: JSON response containing the created voucher details or an error message.    """    try:        # Extract data from the JSON request        data = request.json                # Create a new voucher using the VoucherService        created_voucher = VoucherService.create_voucher(            data['code'],            data['type'],            data['value'],            data['discount'],            data['expiration_date'],            data['redemption_limit'],            data['user_restrictions'],            data['products']        )                print(created_voucher)        # Construct a dictionary from the created_voucher object        voucher_dict = {            'code': created_voucher.code,            'type': created_voucher.type,            'value': created_voucher.value,            'discount': created_voucher.discount,            'expiration_date': created_voucher.expiration_date,            'redemption_limit': created_voucher.redemption_limit,            'user_restrictions': created_voucher.user_restrictions,            'products': created_voucher.products        }        # Return the created voucher details with a 201 Created status code        return jsonify(voucher_dict), 201    except Exception as e:        # Return an error message with a 400 Bad Request status code        return jsonify({'error': str(e)}), 400